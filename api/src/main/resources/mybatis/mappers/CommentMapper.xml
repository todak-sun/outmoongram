<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="me.highdk.api.v1.comment.CommentDao">
	<insert id="create" useGeneratedKeys="true" keyProperty="id" parameterType="me.highdk.api.v1.comment.Comment">
		INSERT
			INTO
			OUTMOON_CMT(
				PARENT_ID, CONTENT, WRITTEN_AT, UPDATED_AT, POST_ID, WRITER_ID
			)
		VALUES(
			#{parentId}, #{content}, now(), now(), #{postId}, #{writerId}
			);
	</insert>
	
	<select id="getById" parameterType="java.lang.Long" resultType="me.highdk.api.v1.comment.Comment">
		SELECT
			ID,
			PARENT_ID,
			CONTENT,
			WRITTEN_AT,
			UPDATED_AT,
			LIKE_CNT,
			COMMENT_CNT,
			POST_ID,
			WRITER_ID
		FROM
			OUTMOON_CMT
		WHERE
			ID = #{id};
	</select>
	
	<select id="findById" parameterType="java.lang.Long" resultType="me.highdk.api.v1.comment.Comment">
		SELECT
			ID,
			PARENT_ID,
			CONTENT,
			WRITTEN_AT,
			UPDATED_AT,
			LIKE_CNT,
			COMMENT_CNT,
			POST_ID,
			WRITER_ID
		FROM
			OUTMOON_CMT
		WHERE
			ID = #{id};
	</select>
	
	<select id="getByPostId" resultType="me.highdk.api.v1.comment.Comment">
		WITH RECURSIVE MAIN AS (
			SELECT
				ARRAY [ID] AS LEVEL,
				ID,
				PARENT_ID,
				CONTENT,
				WRITTEN_AT,
				UPDATED_AT,
				LIKE_CNT,
				COMMENT_CNT,
				POST_ID,
				WRITER_ID
			FROM
				OUTMOON_CMT
			WHERE
				POST_ID = #{postId}
				AND PARENT_ID = 0
			UNION
			ALL
			SELECT
				LEVEL || OC.PARENT_ID,
				OC.ID,
				OC.PARENT_ID,
				OC.CONTENT,
				OC.WRITTEN_AT,
				OC.UPDATED_AT,
				OC.LIKE_CNT,
				OC.COMMENT_CNT,
				OC.POST_ID,
				OC.WRITER_ID
			FROM
				OUTMOON_CMT AS OC
				JOIN MAIN ON MAIN.ID = OC.PARENT_ID
		)
		SELECT
			ID,
			PARENT_ID,
			CONTENT,
			WRITTEN_AT,
			UPDATED_AT,
			LIKE_CNT,
			COMMENT_CNT,
			POST_ID,
			WRITER_ID
		FROM
			MAIN
		ORDER BY
			LEVEL 
		OFFSET ${pageDto.start}		
		LIMIT  ${pageDto.size};		
	</select>
</mapper>