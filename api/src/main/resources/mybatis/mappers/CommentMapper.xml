<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="me.highdk.api.v1.comment.CommentDao">
	<insert id="create" useGeneratedKeys="true" keyProperty="id" parameterType="Comment">
		INSERT
			INTO
			OUTMOON_CMT(
				PARENT_ID, CONTENT, WRITTEN_AT, UPDATED_AT, POST_ID, WRITER_ID
			)
		VALUES(
			#{parentId}, #{content}, now(), now(), #{postId}, #{writerId}
			);
	</insert>
	
	<select id="getById" parameterType="Long" resultType="Comment">
		SELECT
			ID,
			PARENT_ID,
			CONTENT,
			WRITTEN_AT,
			UPDATED_AT,
			LIKE_CNT,
			COMMENT_CNT,
			POST_ID,
			WRITER_ID
		FROM
			OUTMOON_CMT
		WHERE
			ID = #{id};
	</select>
	
	<select id="findById" parameterType="Long" resultType="Comment">
		SELECT
			ID,
			PARENT_ID,
			CONTENT,
			WRITTEN_AT,
			UPDATED_AT,
			LIKE_CNT,
			COMMENT_CNT,
			POST_ID,
			WRITER_ID
		FROM
			OUTMOON_CMT
		WHERE
			ID = #{id};
	</select>
	
	<resultMap id="CommentWithWriter" type="Comment">
		<id property="id" column="ID"/>
		<result property="parentId" column="PARENT_ID"/>
		<result property="content" column="CONTENT"/>
		<result property="writtenAt" column="WRITTEN_AT"/>
		<result property="updatedAt" column="UPDATED_AT"/>
		<result property="likeCnt" column="LIKE_CNT"/>
		<result property="commentCnt" column="COMMENT_CNT"/>
		<result property="postId" column="POST_ID"/>
		<association property="writer" javaType="User">
			<id property="id" column="WRITER_ID"/>
		    <result property="nickName" column="WRITER_NAME"/>
		</association>
	</resultMap>
	
	<select id="getByPostId" resultMap="CommentWithWriter">
		WITH RECURSIVE MAIN AS (
			SELECT
				*
			FROM
				(
					SELECT
						ARRAY [ID] AS LEVEL, ID, PARENT_ID, CONTENT, WRITTEN_AT, UPDATED_AT, LIKE_CNT, COMMENT_CNT, POST_ID, WRITER_ID
					FROM
						OUTMOON_CMT
					WHERE
						POST_ID = #{postId}
						AND PARENT_ID = 0
					OFFSET #{pageDto.start}
					LIMIT #{pageDto.size}
				) AS T
		UNION ALL
			SELECT
				LEVEL || OC.PARENT_ID, OC.ID, OC.PARENT_ID, OC.CONTENT, OC.WRITTEN_AT, OC.UPDATED_AT, OC.LIKE_CNT, OC.COMMENT_CNT, OC.POST_ID, OC.WRITER_ID
			FROM
				OUTMOON_CMT AS OC
			JOIN MAIN ON
				MAIN.ID = OC.PARENT_ID
		)
		SELECT
			MAIN.ID,
			MAIN.PARENT_ID,
			MAIN.CONTENT,
			MAIN.WRITTEN_AT,
			MAIN.UPDATED_AT,
			MAIN.LIKE_CNT,
			MAIN.COMMENT_CNT,
			MAIN.POST_ID,
			U.ID AS WRITER_ID,
			U.NICK_NAME AS WRITER_NAME
		FROM
			MAIN
		LEFT JOIN OUTMOON_USER AS U
			ON MAIN.WRITER_ID = U.ID 
		ORDER BY
			LEVEL,
			MAIN.ID;
	</select>
	
	<select id="countsByPostId" resultType="Long" parameterType="java.lang.Long">
		SELECT 
			COUNT(*) 
		FROM
			OUTMOON_CMT
		WHERE
			POST_ID = #{postId}; 
	</select>
	
	<update id="update" parameterType="Comment">
		UPDATE
			OUTMOON_CMT
		SET
			CONTENT = #{content},
			UPDATED_AT = now()
		WHERE
			ID = #{id};
	</update>
	
	<delete id="deleteById" parameterType="Long">
		DELETE 
		FROM 
			OUTMOON_CMT
		WHERE
			ID = #{id};
	</delete>
</mapper>